diff a/code/game/objects/structures/musician.dm b/code/game/objects/structures/musician.dm	(rejected hunks)
@@ -1,5 +1,6 @@
 
 #define MUSIC_MAXLINES 300
+#define MUSIC_MAXLINECHARS 50
 
 /datum/song
 	var/name = "Untitled"
@@ -172,7 +173,7 @@
 					defined by tempo / x: <i>C,G/2,E/4</i><br>
 					Combined, an example is: <i>E-E4/4,F#/2,G#/8,B/8,E3-E4/4</i>
 					<br>
-					Lines may be up to 50 characters.<br>
+					Lines may be up to [MUSIC_MAXLINECHARS] characters.<br>
 					A song may only contain up to [MUSIC_MAXLINES] lines.<br>
 					"}
 		else
@@ -198,7 +199,7 @@
 			lines.Cut(MUSIC_MAXLINES + 1)
 		var/linenum = 1
 		for(var/l in lines)
-			if(lentext(l) > 50)
+			if(lentext(l) > MUSIC_MAXLINECHARS)
 				to_chat(usr, "Line [linenum] too long!")
 				lines.Remove(l)
 			else
@@ -261,8 +262,8 @@
 			return
 		if(lines.len > MUSIC_MAXLINES)
 			return
-		if(lentext(newline) > 50)
-			newline = copytext(newline, 1, 50)
+		if(lentext(newline) > MUSIC_MAXLINECHARS)
+			newline = copytext(newline, 1, MUSIC_MAXLINECHARS)
 		lines.Add(newline)
 
 	else if(href_list["deleteline"])
@@ -368,7 +369,7 @@
 					"<span class='italics'>You hear ratchet.</span>")
 				anchored = TRUE
 		else if(anchored)
-			playsound(src.loc, O.usesound, 50, 1)
+			playsound(src, O.usesound, 50, 1)
 			to_chat(user, "<span class='notice'> You begin to loosen \the [src]'s casters...</span>")
 			if (do_after(user, 40*O.toolspeed, target = src))
 				user.visible_message( \
